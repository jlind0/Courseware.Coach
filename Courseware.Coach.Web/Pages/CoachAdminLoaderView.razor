@page "/admin/coaches/{CoachId:guid}"
@inject AuthenticationStateProvider AuthState
@inherits ReactiveInjectableComponentBase<CoachLoaderViewModel>
@if (ViewModel != null)
{
    <AlertView Alert="ViewModel.Alert" />
    <CoachAdminView ViewModel="ViewModel.ViewModel" />
}

@code {
    [Parameter] public Guid CoachId { get; set; }
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthState.GetAuthenticationStateAsync();
        bool isAuthed = authState.User?.IsInRole("Admin") == true || authState.User?.IsInRole($"Admin:Coach:{CoachId}") == true;
        if(!isAuthed)
        {
            throw new UnauthorizedAccessException();
        }
        if (ViewModel != null)
        {
            await ViewModel.Load.Execute(CoachId).GetAwaiter();
        }
        await base.OnInitializedAsync();
    }
}